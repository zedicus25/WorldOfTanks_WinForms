<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1
        MAAA6mAAADqYAAAXb5JfxUYAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAPKSURBVHhe7ZrrctMwEIV5qSYu
        9M7j0NJS7hRei0BJW8odCs9kdJysR1GOHVleOXKSH99Mxtok3qPdtbXSve0v5/k6sxGAXUyRB9+e5bs/
        X9KxNvRCgJ3vz/OH/94V4DOzCSV5AXZ+vCidFxANzDaE9AWwZl/QTIXGAgyvTun1UDCbR3/f5rtmptk4
        gMMxnAfeAmTXZ/lgdJxvvX+UZ0oi3P/6ND+8uyid2//1itqBPTOGdGBjbfASYDg+LRwXIMT2Lbdtwv7v
        16XzwuGfN4UwzD4GfhFw+yTfms6+MBw/5rae2GHtgpRQFcHcf3Z1Rsf8U8CEfeH8qH0KwDnmuIDIYN8L
        IbuxUtd8dscbFcHhJzPrRk021hQpfq7zByYFmH0IqFt21E5Sd/b+GwmgjVsE1UP/M0ldJ3qXKoCAkIfz
        mi84QhkFSN3r+dRNQgAQs/KjYGcmGthYtQConBVfWiUqBUDBKwrHh+PJI0+p+KmB+1GYoEoB5NEhZDdp
        CSATJJM0uDyZTFRDUagAcNZ2vnh8ELtlMvh4MnOPAnvW18EjwKgIRVE58aPDy3ZvfTGQe3Np+opeXQSB
        +TG89aUW/sh/5jye+dS+hnoBEgVhzgRAWjD7OnorAFLULdTFqzqxr6OXArjgfWWSqs0KIFgJAdqwEYBd
        XCc2ArCLoWBFh+7ugWJHJzYqAmAd7zY4tXdwYtFaALSwbMcFzb5eTFoLUNfdjdnkqENSkY25tBYAf8ac
        B743oQlST5qtPmmoUgOq0gCbHMw+FntONPo0WVUEcDcwIQi2sdqmABqa7HoVKMb2fQBsqTFbQUUAgNnG
        n7XOe7PURWen3MxouAljR8Ei54GaAFqUO1BT0O5idnVgk9W3xZ6cAMDdzNBoflaRpABlw3M0XeN3LgD6
        agrb38FM1/d0TBkqgN1xRTEq2s5oN0WciWXBBTAOiwA2yW2OKEAFYM4DZtt3NgLMXazouYc8j/vAnADo
        sBY1wNl5Cem59wGaAjOYiCi2yVfwCQAWC7DibARgF9eJzgQozuk0XN+HYBduwGxsuhHAFFC5Ibxaxzxy
        YzsPmI1NJwLYx1lsQnZzF+H+B7OxiS+AWVVWneaIseJz/4PZ2EQXwO3wCKmcO1oogPTXju4ugo6yV60s
        izpA7LvGWwCB2SxCTnTYAgQVQbyVBhyCqKNWALbpwey8MQ5g5kOLH74L8RBVWvWjVgC334+NBmbXFe6Z
        IA0RvIogIgFt5hinuX2hZ/+JXVO8BEgBrEhxYLM8vDnuIAWSZHp4U6tr3T8BlFlzAc7z/xMXv8+UlcZ2
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>